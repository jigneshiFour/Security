{
  "name": "invoices",
  "description": "decomposition of monolith",
  "repository": {
    "type": "git",
    "url": "https://github.com/psyhitus/blockchain-invoices"
  },
  "dependencies": {
    "async": "2.5.0",
    "axios": "0.17.1",
    "axios-retry": "^3.0.2",
    "azure": "2.2.0-preview",
    "azure-storage": "2.5.0",
    "bcrypt": "2.0.1",
    "body-parser": "1.17.1",
    "client-sessions": "0.8.0",
    "cookie-parser": "1.4.3",
    "debug": "3.1.0",
    "dotenv": "4.0.0",
    "dropbox": "2.5.11",
    "eth-lightwallet": "2.5.6",
    "express": "4.15.2",
    "generate-password": "1.3.0",
    "git-rev-sync": "1.9.1",
    "googleapis": "22.2.0",
    "hooked-web3-provider": "1.0.0",
    "http-status": "1.0.1",
    "jade": "1.11.0",
    "jest": "^22.4.3",
    "joi": "13.0.2",
    "js2xmlparser": "3.0.0",
    "localize": "0.4.7",
    "log4js": "2.5.3",
    "mailgun-js": "0.14.2",
    "mongodb": "3.0.4",
    "mongoose": "5.0.10",
    "morgan": "1.8.1",
    "ms-rest-azure": "2.3.5",
    "nconf": "0.8.4",
    "node-geocoder": "3.22.0",
    "node-opensignal-api": "0.0.3",
    "node-restify-validation": "^1.1.1",
    "nodemailer": "^4.4.2",
    "npm": "^5.8.0",
    "object-hash": "1.1.8",
    "passport": "0.4.0",
    "passport-azure-ad": "3.0.8",
    "passport-facebook": "2.1.1",
    "passport-linkedin-oauth2": "1.5.0",
    "passport-twitter": "1.0.4",
    "request": "2.83.0",
    "request-promise": "4.2.2",
    "restify": "5.2.0",
    "restify-clients": "1.5.0",
    "restify-errors": "4.3.0",
    "restify-paginate": "0.0.4",
    "serve-favicon": "2.4.2",
    "solc": "0.4.15",
    "supervisor": "0.12.0",
    "sync-queue": "0.0.2",
    "winston": "2.3.1"
  },
  "devDependencies": {
    "chai": "4.1.2",
    "chai-http": "3.0.0",
    "cross-env": "5.1.3",
    "eslint": "^4.19.1",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-plugin-import": "^2.10.0",
    "husky": "^0.14.3",
    "mocha": "3.5.0",
    "moxios": "^0.4.0",
    "prettier": "1.11.1",
    "pretty-quick": "^1.4.1",
    "proxyquire": "1.8.0",
    "swagger-inline": "0.0.8"
  },
  "scripts": {
    "load-test-start": "node ./load-testing/app.js",
    "load-blockTest": "node ./load-testing/blockTest.js",
    "start": "supervisor -w src src/app.js",
    "solc-compile": "node scripts/solc-compile.js",
    "compile-log": "npm run solc-compile ZorgLog.sol --",
    "compile-invoice": "npm run solc-compile ZorgInvoice.sol --",
    "db-download": "node scripts/db-download.js",
    "db-upload": "node scripts/db-upload.js",
    "db-sync": "npm run db-download && npm run db-upload",
    "db-connection-cleaner": "node scripts/dbCleaner.js",
    "azure-regeneration": "node scripts/regeneration.js",
    "azure-migration": "node scripts/azureMigrate.js",
    "a2maddress-migration": "node scripts/a2mAddressSync.js",
    "run_admin": "node_modules/.bin/supervisor --watch abi/,.env --extensions .json,.env  services/admin/app.js",
    "run_baby": "node_modules/.bin/supervisor --watch abi/,.env --extensions .json,.env services/babySitter/app.js",
    "run_companies": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/companies/app.js",
    "run_contracts": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/contracts/app.js",
    "run_credentials": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/credentials/app.js",
    "run_enter": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/enter/app.js",
    "run_fileupload": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/fileUpload/app.js",
    "run_healthcare": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/healthcare/app.js",
    "run_invoice": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/invoices/app.js",
    "run_logs": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/logEntries/app.js",
    "run_push": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/pushNotifications/app.js",
    "run_roles": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/roles/app.js",
    "run_subject": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/subjects/app.js",
    "run_healthcare_wrap": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/healthcare-wrap/app.js",
    "run_tx_worker": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/txWorker/app.js",
    "run_swarm": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/swarm-service/app.js",
    "run_permission": "node_modules/.bin/supervisor --watch abi,.env --extensions .json,.env services/permission/app.js",
    "prettier": "npx prettier --print-width 80 --single-quote --trailing-comma es5 --write './**/*.js'",
    "lint": "npx eslint . --fix",
    "precommit": "pretty-quick --staged",
    "test": "jest --no-cache --watch",
    "jest": {
      "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.tsx?$",
      "moduleFileExtensions": [
        "js",
        "json",
        "node"
      ]
    },
    "docker": "npm run docker-stop && docker-compose -f ./docker/docker-compose.yaml up -d --remove-orphans",
    "docker-stop": "docker-compose -f ./docker/docker-compose.yaml down",
    "docker-clean": "docker-compose -f ./docker/docker-compose.yaml down -v --rmi all",
    "docker-restart": "docker-compose -f ./docker/docker-compose.yaml restart",
    "restart-services": "docker-compose -f ./docker/docker-compose.yaml restart admin babysitter contracts enter fileupload invoices logs push roles subjects thin txworker",
    "docker-build": "docker-compose -f ./docker/docker-compose.yaml build",
    "parity-token": "docker exec -it parity /parity/parity signer new-token",
    "docker-exec": "docker exec -it",
    "swagger-enter": "swagger-inline services/enter/**/*.js --base services/enter/swaggerBase.yaml --format .yaml --out services/enter/swagger.yaml",
    "swagger-credentials": "swagger-inline services/credentials/**/*.js --base services/credentials/swaggerBase.yaml --format .yaml --out services/credentials/swagger.yaml",
    "swagger-contracts": "swagger-inline services/contracts/**/*.js --base services/contracts/swaggerBase.yaml --format .yaml --out services/contracts/swagger.yaml",
    "swagger-companies": "swagger-inline services/companies/**/*.js --base services/companies/swaggerBase.yaml --format .yaml --out services/companies/swagger.yaml",
    "swagger-babysitter": "swagger-inline services/babysitter/**/*.js --base services/babysitter/swaggerBase.yaml --format .yaml --out services/babysitter/swagger.yaml",
    "swagger-admin": "swagger-inline services/admin/**/*.js --base services/admin/swaggerBase.yaml --format .yaml --out services/admin/swagger.yaml",
    "swagger-fileUpload": "swagger-inline services/fileUpload/**/*.js --base services/fileUpload/swaggerBase.yaml --format .yaml --out services/fileUpload/swagger.yaml",
    "swagger-healthcare": "swagger-inline services/healthcare/**/*.js --base services/healthcare/swaggerBase.yaml --format .yaml --out services/healthcare/swagger.yaml",
    "swagger-healthcare-wrap": "swagger-inline services/healthcare-wrap/**/*.js --base services/healthcare-wrap/swaggerBase.yaml --format .yaml --out services/healthcare-wrap/swagger.yaml",
    "swagger-invoice": "swagger-inline services/invoices/**/*.js --base services/invoices/swaggerBase.yaml --format .yaml --out services/invoices/swagger.yaml",
    "swagger-log": "swagger-inline services/logEntries/**/*.js --base services/logEntries/swaggerBase.yaml --format .yaml --out services/logEntries/swagger.yaml",
    "swagger-permission": "swagger-inline services/permission/**/*.js --base services/permission/swaggerBase.yaml --format .yaml --out services/permission/swagger.yaml",
    "swagger-push": "swagger-inline services/pushNotifications/**/*.js --base services/pushNotifications/swaggerBase.yaml --format .yaml --out services/pushNotifications/swagger.yaml",
    "swagger-role": "swagger-inline services/roles/**/*.js --base services/roles/swaggerBase.yaml --format .yaml --out services/roles/swagger.yaml",
    "swagger-subject": "swagger-inline services/subjects/**/*.js --base services/subjects/swaggerBase.yaml --format .yaml --out services/subjects/swagger.yaml",
    "swagger-swarm": "swagger-inline services/swarm-service/**/*.js --base services/swarm-service/swaggerBase.yaml --format .yaml --out services/swarm-service/swagger.yaml",
    "swagger-test": "swagger-inline services/test/**/*.js --base services/test/swaggerBase.yaml --format .yaml --out services/test/swagger.yaml",
    "swagger-txWorker": "swagger-inline services/txWorker/**/*.js --base services/txWorker/swaggerBase.yaml --format .yaml --out services/txWorker/swagger.yaml"
  }
}
